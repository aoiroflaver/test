; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27024.1 

	TTL	C:\Prj\misc\test\callconv.c
	ARM64

	AREA	|.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|int_args|
	EXPORT	|float_args|
	EXPORT	|var_args_int|
	EXPORT	|var_args|
	EXPORT	|test_int_args|
	EXPORT	|test_float_args|
	EXPORT	|test_var_args_int|
	EXPORT	|test_var_args_float|
	EXPORT	|test_unknown_function|
	IMPORT	|unknown_function|
	IMPORT	|_fltused|

	AREA	|.pdata|, PDATA
|$pdata$int_args| DCD imagerel |$LN3|
	DCD	0x1000031
	;Flags[SingleProEpi] functionLength[48] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[32]
|$pdata$float_args| DCD imagerel |$LN3|
	DCD	0x1800041
	;Flags[SingleProEpi] functionLength[64] RegF[0] RegI[0] H[0] frameChainReturn[UnChained] frameSize[48]
|$pdata$var_args_int| DCD imagerel |$LN3|
	DCD	imagerel |$unwind$var_args_int|
|$pdata$var_args| DCD imagerel |$LN3|
	DCD	imagerel |$unwind$var_args|
|$pdata$test_int_args| DCD imagerel |$LN3|
	DCD	0xe0005d
	;Flags[SingleProEpi] functionLength[92] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[16]
|$pdata$test_float_args| DCD imagerel |$LN3|
	DCD	0xe00055
	;Flags[SingleProEpi] functionLength[84] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[16]
|$pdata$test_var_args_int| DCD imagerel |$LN4|
	DCD	0xe0005d
	;Flags[SingleProEpi] functionLength[92] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[16]
|$pdata$test_var_args_float| DCD imagerel |$LN7|
	DCD	0xe0006d
	;Flags[SingleProEpi] functionLength[108] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[16]
|$pdata$test_unknown_function| DCD imagerel |$LN3|
	DCD	0xe0002d
	;Flags[SingleProEpi] functionLength[44] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[16]

	AREA	|.xdata|, DATA
|$unwind$var_args_int| DCD 0x11600045
	DCD	0x3e3e302
	DCD	0xe40302e4
	;Code Words[2], Epilog Start Index[5], E[1], X[0], Function Length[69]=276 bytes
	;alloc_s
	;nop
	;nop
	;alloc_s
	;end
	;alloc_s
	;alloc_s
	;end
|$unwind$var_args| DCD 0x19a00047
	DCD	0xe3e3e303
	DCD	0x303e403
	DCD	0xe3e3e3e4
	;Code Words[3], Epilog Start Index[6], E[1], X[0], Function Length[71]=284 bytes
	;alloc_s
	;nop
	;nop
	;nop
	;alloc_s
	;end
	;alloc_s
	;alloc_s
	;end
	;nop
	;nop
	;nop
; Function compile flags: /Odsp

	AREA	|.text$mn|, CODE, ARM64

|test_unknown_function| PROC
; File c:\prj\misc\test\callconv.c
; Line 51
|$LN3|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
; Line 52
	fmov        d2,#6
	mov         w2,#5
	fmov        d1,#4
	mov         w1,#3
	fmov        d0,#2
	mov         w0,#1
	bl          unknown_function
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |test_unknown_function|

; Function compile flags: /Odsp

	AREA	|.text$mn|, CODE, ARM64

|test_var_args_float| PROC
; File c:\prj\misc\test\callconv.c
; Line 47
|$LN7|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	sub         sp,sp,#0x30
; Line 48
	fmov        d16,#12
	str         d16,[sp,#0x28]
	fmov        d16,#11
	str         d16,[sp,#0x20]
	fmov        d16,#10
	str         d16,[sp,#0x18]
	fmov        d16,#9
	str         d16,[sp,#0x10]
	fmov        d16,#8
	str         d16,[sp,#8]
	fmov        d16,#7
	str         d16,[sp]
	ldr         x7,|$LN3@test_var_a|
	mov         w6,#5
	ldr         x5,|$LN4@test_var_a|
	mov         w4,#3
	ldr         x3,|$LN5@test_var_a|
	mov         w2,#0x62
	mov         w1,#0x61
	ldr         w0,|$LN6@test_var_a|
	bl          var_args
	add         sp,sp,#0x30
	ldp         fp,lr,[sp],#0x10
	ret
	nop
|$LN3@test_var_a|
	DCFD         6
|$LN4@test_var_a|
	DCFD         4
|$LN5@test_var_a|
	DCFD         2
|$LN6@test_var_a|
	DCFS         1

	ENDP  ; |test_var_args_float|

; Function compile flags: /Odsp

	AREA	|.text$mn|, CODE, ARM64

|test_var_args_int| PROC
; File c:\prj\misc\test\callconv.c
; Line 43
|$LN4|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	sub         sp,sp,#0x20
; Line 44
	mov         w8,#0x6C
	str         w8,[sp,#0x18]
	mov         w8,#0x6B
	str         w8,[sp,#0x10]
	mov         w8,#0x6A
	str         w8,[sp,#8]
	mov         w8,#0x69
	str         w8,[sp]
	mov         w7,#0x68
	mov         w6,#0x67
	mov         w5,#0x66
	mov         w4,#0x65
	mov         w3,#0x64
	mov         w2,#0x63
	mov         w1,#0x62
	ldr         w0,|$LN3@test_var_a|
	bl          var_args
	add         sp,sp,#0x20
	ldp         fp,lr,[sp],#0x10
	ret
	nop
|$LN3@test_var_a|
	DCFS         97

	ENDP  ; |test_var_args_int|

; Function compile flags: /Odsp

	AREA	|.text$mn|, CODE, ARM64

|test_float_args| PROC
; File c:\prj\misc\test\callconv.c
; Line 39
|$LN3|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	sub         sp,sp,#0x10
; Line 40
	fmov        d16,#12
	str         d16,[sp,#8]
	fmov        d16,#11
	str         d16,[sp]
	fmov        d7,#10
	fmov        d6,#9
	fmov        s5,#8
	fmov        s4,#7
	fmov        s3,#6
	fmov        s2,#5
	fmov        s1,#4
	fmov        s0,#3
	mov         w1,#0x62
	mov         w0,#0x61
	bl          float_args
	add         sp,sp,#0x10
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |test_float_args|

; Function compile flags: /Odsp

	AREA	|.text$mn|, CODE, ARM64

|test_int_args| PROC
; File c:\prj\misc\test\callconv.c
; Line 35
|$LN3|
	stp         fp,lr,[sp,#-0x10]!
	mov         fp,sp
	sub         sp,sp,#0x20
; Line 36
	mov         w8,#0x6C
	str         w8,[sp,#0x18]
	mov         w8,#0x6B
	str         w8,[sp,#0x10]
	mov         w8,#0x6A
	str         w8,[sp,#8]
	mov         w8,#0x69
	str         w8,[sp]
	mov         w7,#0x68
	mov         w6,#0x67
	mov         w5,#0x66
	mov         w4,#0x65
	mov         w3,#0x64
	mov         w2,#0x63
	mov         w1,#0x62
	mov         w0,#0x61
	bl          int_args
	add         sp,sp,#0x20
	ldp         fp,lr,[sp],#0x10
	ret

	ENDP  ; |test_int_args|

; Function compile flags: /Odsp

	AREA	|.text$mn|, CODE, ARM64

|var_args| PROC
; File c:\prj\misc\test\callconv.c
; Line 24
|$LN3|
	sub         sp,sp,#0x30
	stp         x3,x4,[sp,#8]
	stp         x5,x6,[sp,#0x18]
	str         x7,[sp,#0x28]
	sub         sp,sp,#0x30
	str         w0,[sp,#0x10]
	str         w1,[sp,#0x14]
	str         w2,[sp,#0x18]
; Line 26
	add         x8,sp,#0x38
	str         x8,[sp,#0x20]
; Line 27
	mov         x9,#0
	ldr         x8,[sp,#0x20]
	sub         x8,x9,x8
	and         x8,x8,#3
	add         x9,x8,#8
	ldr         x8,[sp,#0x20]
	add         x8,x8,x9
	str         x8,[sp,#0x20]
	ldr         x8,[sp,#0x20]
	sub         x8,x8,#8
	ldr         w8,[x8]
	str         w8,[sp]
; Line 28
	mov         x9,#0
	ldr         x8,[sp,#0x20]
	sub         x8,x9,x8
	and         x8,x8,#3
	add         x9,x8,#8
	ldr         x8,[sp,#0x20]
	add         x8,x8,x9
	str         x8,[sp,#0x20]
	ldr         x8,[sp,#0x20]
	sub         x8,x8,#8
	ldr         w8,[x8]
	str         w8,[sp,#4]
; Line 29
	mov         x9,#0
	ldr         x8,[sp,#0x20]
	sub         x8,x9,x8
	and         x8,x8,#3
	add         x9,x8,#8
	ldr         x8,[sp,#0x20]
	add         x8,x8,x9
	str         x8,[sp,#0x20]
	ldr         x8,[sp,#0x20]
	sub         x8,x8,#8
	ldr         w8,[x8]
	str         w8,[sp,#8]
; Line 30
	mov         x9,#0
	ldr         x8,[sp,#0x20]
	sub         x8,x9,x8
	and         x8,x8,#3
	add         x9,x8,#8
	ldr         x8,[sp,#0x20]
	add         x8,x8,x9
	str         x8,[sp,#0x20]
	ldr         x8,[sp,#0x20]
	sub         x8,x8,#8
	ldr         w8,[x8]
	str         w8,[sp,#0xC]
; Line 31
	mov         x8,#0
	str         x8,[sp,#0x20]
; Line 32
	ldr         w9,[sp]
	ldr         w8,[sp,#4]
	add         w10,w9,w8
	ldr         w9,[sp,#8]
	ldr         w8,[sp,#0xC]
	mul         w8,w9,w8
	add         w0,w10,w8
	mov         w0,w0
	add         sp,sp,#0x30
	add         sp,sp,#0x30
	ret

	ENDP  ; |var_args|

; Function compile flags: /Odsp

	AREA	|.text$mn|, CODE, ARM64

|var_args_int| PROC
; File c:\prj\misc\test\callconv.c
; Line 13
|$LN3|
	stp         x2,x3,[sp,#-0x30]!
	stp         x4,x5,[sp,#0x10]
	stp         x6,x7,[sp,#0x20]
	sub         sp,sp,#0x20
	str         w0,[sp,#0x10]
	str         w1,[sp,#0x14]
; Line 15
	add         x8,sp,#0x20
	str         x8,[sp,#0x18]
; Line 16
	mov         x9,#0
	ldr         x8,[sp,#0x18]
	sub         x8,x9,x8
	and         x8,x8,#3
	add         x9,x8,#8
	ldr         x8,[sp,#0x18]
	add         x8,x8,x9
	str         x8,[sp,#0x18]
	ldr         x8,[sp,#0x18]
	sub         x8,x8,#8
	ldr         w8,[x8]
	str         w8,[sp]
; Line 17
	mov         x9,#0
	ldr         x8,[sp,#0x18]
	sub         x8,x9,x8
	and         x8,x8,#3
	add         x9,x8,#8
	ldr         x8,[sp,#0x18]
	add         x8,x8,x9
	str         x8,[sp,#0x18]
	ldr         x8,[sp,#0x18]
	sub         x8,x8,#8
	ldr         w8,[x8]
	str         w8,[sp,#4]
; Line 18
	mov         x9,#0
	ldr         x8,[sp,#0x18]
	sub         x8,x9,x8
	and         x8,x8,#3
	add         x9,x8,#8
	ldr         x8,[sp,#0x18]
	add         x8,x8,x9
	str         x8,[sp,#0x18]
	ldr         x8,[sp,#0x18]
	sub         x8,x8,#8
	ldr         w8,[x8]
	str         w8,[sp,#8]
; Line 19
	mov         x9,#0
	ldr         x8,[sp,#0x18]
	sub         x8,x9,x8
	and         x8,x8,#3
	add         x9,x8,#8
	ldr         x8,[sp,#0x18]
	add         x8,x8,x9
	str         x8,[sp,#0x18]
	ldr         x8,[sp,#0x18]
	sub         x8,x8,#8
	ldr         w8,[x8]
	str         w8,[sp,#0xC]
; Line 20
	mov         x8,#0
	str         x8,[sp,#0x18]
; Line 21
	ldr         w9,[sp]
	ldr         w8,[sp,#4]
	add         w10,w9,w8
	ldr         w9,[sp,#8]
	ldr         w8,[sp,#0xC]
	mul         w8,w9,w8
	add         w0,w10,w8
	mov         w0,w0
	add         sp,sp,#0x20
	add         sp,sp,#0x30
	ret

	ENDP  ; |var_args_int|

; Function compile flags: /Odsp

	AREA	|.text$mn|, CODE, ARM64

|float_args| PROC
; File c:\prj\misc\test\callconv.c
; Line 9
|$LN3|
	sub         sp,sp,#0x30
	str         w0,[sp,#8]
	str         w1,[sp,#0xC]
	str         s0,[sp]
	str         s1,[sp,#4]
	str         s2,[sp,#0x10]
	str         s3,[sp,#0x14]
	str         s4,[sp,#0x18]
	str         s5,[sp,#0x1C]
	str         d6,[sp,#0x20]
	str         d7,[sp,#0x28]
; Line 10
	ldr         s17,[sp]
	ldr         s16,[sp,#4]
	fmul        s0,s17,s16
	add         sp,sp,#0x30
	ret

	ENDP  ; |float_args|

; Function compile flags: /Odsp

	AREA	|.text$mn|, CODE, ARM64

|int_args| PROC
; File c:\prj\misc\test\callconv.c
; Line 5
|$LN3|
	sub         sp,sp,#0x20
	str         w0,[sp]
	str         w1,[sp,#4]
	str         w2,[sp,#8]
	str         w3,[sp,#0xC]
	str         w4,[sp,#0x10]
	str         w5,[sp,#0x14]
	str         w6,[sp,#0x18]
	str         w7,[sp,#0x1C]
; Line 6
	ldr         w0,[sp]
	add         sp,sp,#0x20
	ret

	ENDP  ; |int_args|

	END
